<!--
Copyright 2016 - 2017 Atlassian Pty Ltd.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<atlassian-plugin key="${project.groupId}.${project.artifactId}" name="Per-build Container Plugin" plugins-version="2">
    <plugin-info>
        <description>The base plugin for per-build container docker agents.</description>
        <version>${project.version}</version>
        <vendor name="${project.organization.name}" url="${project.organization.url}"/>
    </plugin-info>

    <!-- add our i18n resource -->
    <resource type="i18n" name="i18n" location="isolated-docker-plugin"/>

    <preStageAction key="reserveFutureCapacityPreStage" class="com.atlassian.buildeng.isolated.docker.lifecycle.ReserveFutureCapacityPreStageAction">
    </preStageAction>

    <postStageAction key="reserveFutureCapacityPostStage" class="com.atlassian.buildeng.isolated.docker.lifecycle.ReserveFutureCapacityPostStageAction">
    </postStageAction>


    <buildProcessor key="stopContainerAgent" name="Stop Container Agent"
                    class="com.atlassian.buildeng.isolated.docker.lifecycle.StopDockerAgentBuildProcessor">
        <skipIfFailed>false</skipIfFailed>
    </buildProcessor>
    <component-import key="isolatedAgentService"
                      interface="com.atlassian.buildeng.spi.isolated.docker.IsolatedAgentService"/>
    <bambooEventListener key="bambooEventListener" name="Bamboo Event Listener"
                         class="com.atlassian.buildeng.isolated.docker.PreBuildQueuedEventListener">
        <description>Listens to events of Bamboo.</description>
    </bambooEventListener>

    <bambooEventListener key="agentRegisteredListener" name="Bamboo Event Listener"
                         class="com.atlassian.buildeng.isolated.docker.AgentRegisteredListener">
        <description>Listens to events of Bamboo.</description>
    </bambooEventListener>
    
    <bambooEventListener key="buildCancelledEventListener" name="Listens on Build Cancelled events"
                         class="com.atlassian.buildeng.isolated.docker.lifecycle.BuildCancelledEventListener">
        <description>Listens to events of Bamboo.</description>
    </bambooEventListener>
    
    <component key="AgentCreationRescheduler" class="com.atlassian.buildeng.isolated.docker.AgentCreationRescheduler" public="true">
        <interface>com.atlassian.sal.api.lifecycle.LifecycleAware</interface>
    </component>
    
    <component key="JMXManager" class="com.atlassian.buildeng.isolated.docker.jmx.JMXAgentsService">
    </component>

    <component key="dockerSoxService" class="com.atlassian.buildeng.isolated.docker.sox.DockerSoxService">
    </component>
    
    <component-import key="pluginScheduler">
        <description>SAL Scheduler</description>
        <interface>com.atlassian.sal.api.scheduling.PluginScheduler</interface>
    </component-import>

    <buildAgentRequirementFilter key="theMightyAgentFilter" name="TheMightyAgentFilter" class="com.atlassian.buildeng.isolated.docker.TheMightyAgentFilter">
        <description/>
    </buildAgentRequirementFilter>
    
    <postJobAction key="postJobActionImpl" name="PostJobActionImpl"
                   class="com.atlassian.buildeng.isolated.docker.lifecycle.PostJobActionImpl">
    </postJobAction>

    <component key="isolated-docker-reaper" class="com.atlassian.buildeng.isolated.docker.reaper.Reaper"
               system="true" public="true">
        <description>Reaps dangling isolated docker agents</description>
        <interface>com.atlassian.sal.api.lifecycle.LifecycleAware</interface>
    </component>

    <component key="agentRemovals" class="com.atlassian.buildeng.isolated.docker.AgentRemovals">
    </component>

    <component key="agentLicenseLimits" class="com.atlassian.buildeng.isolated.docker.AgentLicenseLimits">
    </component>
    
    <component key="unmetRequirements" class="com.atlassian.buildeng.isolated.docker.UnmetRequirements">
    </component>

    <web-resource key="docker-ui-js" name="JavaScript to modify task panels.">
        <dependency>com.atlassian.plugins.jquery:jquery</dependency>
        <dependency>com.atlassian.auiplugin:ajs</dependency>

        <resource type="download" name="selectToField.js" location="/selectToField.js"/>
        <resource type="download" name="requirements.js" location="/requirements.js"/>
        <resource type="download" name="insQ.min.js" location="/insQ.min.js"/>

        <context>bamboo.configuration</context>
    </web-resource>


    <web-resource key="docker-job-ui-js" name="JavaScript dependencies for editing isolated docker configuration">
        <dependency>com.atlassian.auiplugin:ajs</dependency>
        <dependency>com.atlassian.plugins.jquery:jquery</dependency>
        <dependency>com.atlassian.auiplugin:dialog2</dependency>
        <resource type="download" name="jquery-autocomplete.css" location="css/jquery-ui-1.8.18.custom.css" />
        <resource type="download" name="jquery-autocomplete.js" location="js/jquery-ui-1.8.18.custom.min.js" />

        <!--resource type="download" name="jobConfiguration.js" location="/templates/plugin/jobConfiguration.js"/-->
        <context>atl.general</context>
    </web-resource>

    <web-panel key="docker-build-summary-job" name="Isolated Docker info for job results panel."
               location="jobresult.summary.right" class="com.atlassian.buildeng.isolated.docker.SummaryPanel">
    </web-panel>
    <web-panel key="docker-build-summary-plan" name="Isolated Docker info for plan results panel."
               location="chainresult.summary.right" class="com.atlassian.buildeng.isolated.docker.PlanSummaryPanel">
    </web-panel>

    <rest key="docker" path="/docker-ui" version="1.0">
        <package>com.atlassian.buildeng.isolated.docker.rest</package>
        <description>Provides the REST resource for javascript code</description>
    </rest>
    
    <buildProcessorServer key="agentSafeguard" name="Safeguarding agents get properly discarded after build."
                          class="com.atlassian.buildeng.isolated.docker.lifecycle.BuildProcessorServerImpl">
        <skipIfFailed/>
        <description/>
        <resource type="freemarker" name="view" location="templates/plugin/jobConfiguration.ftl"/>
        <resource type="freemarker" name="edit" location="templates/plugin/jobConfiguration.ftl"/>
    </buildProcessorServer>
    
    <taskType key="dockertask" name="Per-build Container (PBC) Agent for Deployments" class="com.atlassian.buildeng.isolated.docker.deployment.RequirementTask">
      <description>Reserves the deployment to run on per-build container (PBC) agent. Do not use for plans/jobs, only deployments.</description>
      <configuration class="com.atlassian.buildeng.isolated.docker.deployment.RequirementTaskConfigurator"/>
      <resource type="freemarker" name="edit" location="/templates/plugin/editRequirementTask.ftl"/>
    </taskType>
    <xwork key="local" name="Show Docker Compose for dev execution">
        <package name="localExec" extends="buildResultView">
            <action name="viewLocalExec" class="com.atlassian.buildeng.isolated.docker.compose.LocalExecAction">
                <result name="success" type="freemarker">/templates/plugin/localExec.ftl</result>
            </action>
        </package>
    </xwork>
  <web-item key="PBC:${buildKey}-${buildNumber}" name="PBC" section="results.subMenu/results" weight="65">
    <label key="PBC"/>
    <link linkId="PBC:${buildKey}-${buildNumber}">/build/result/viewLocalExec.action?buildKey=${buildKey}&amp;buildNumber=${buildNumber}</link>
    <condition class="com.atlassian.buildeng.spi.isolated.docker.IsConfiguredCondition"/>
  </web-item>
    
</atlassian-plugin>
